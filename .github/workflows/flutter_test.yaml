name: Flutter Test
on:
  pull_request:
    types:
      - opened
      - synchronize
  push:
    branches:
      - main
    # tagの作成時にビルド実行
    tags:
      - 'v*'
jobs:
  flutter_test:
    # if: ${{ false }}
    name: Test
    # GoldenTestを考慮してWindowsを利用
    # runs-on: ubuntu-latest
    runs-on: windows-latest
    timeout-minutes: 30
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Create dart-define
        shell: powershell
        run: |
          mkdir dart_defines
          [System.Text.Encoding]::UTF8.GetString([Convert]::FromBase64String('${{ secrets.DART_DEFINE_JSON }}')) > dart_defines/prod.json
        # mkdir -p dart_defines
        # echo -n ${{ secrets.DART_DEFINE_JSON }} | base64 -d > dart_defines/prod.json
      - name: Create Firebase Conf
        run: |
          [System.Text.Encoding]::UTF8.GetString([Convert]::FromBase64String('${{ secrets.FIREBASE_OPTIONS }}')) > lib/firebase_options.dart
          [System.Text.Encoding]::UTF8.GetString([Convert]::FromBase64String('${{ secrets.FIREBASE_OPTIONS_DEV }}')) > lib/firebase_options_dev.dart
          mkdir android/app/src/prod/
          [System.Text.Encoding]::UTF8.GetString([Convert]::FromBase64String('${{ secrets.GOOGLE_SERVICES_JSON }}')) > android/app/src/prod/google-services.json
          mkdir ios/prod/
          [System.Text.Encoding]::UTF8.GetString([Convert]::FromBase64String('${{ secrets.GOOGLE_INFO_PLIST }}')) > ios/prod/GoogleService-Info.plist
        # echo -n ${{ secrets.FIREBASE_OPTIONS }} | base64 -d > lib/firebase_options.dart
        # echo -n ${{ secrets.FIREBASE_OPTIONS_DEV }} | base64 -d > lib/firebase_options_dev.dart
        # mkdir -p android/app/src/prod/
        # echo -n ${{ secrets.GOOGLE_SERVICES_JSON }} | base64 -d > android/app/src/prod/google-services.json
        # mkdir -p ios/prod/
        # echo -n ${{ secrets.GOOGLE_INFO_PLIST }} | base64 -d > ios/prod/GoogleService-Info.plist
      - name: Create env
        run: |
          mkdir scripts
          mkdir scripts/env
          [System.Text.Encoding]::UTF8.GetString([Convert]::FromBase64String('${{ secrets.ENV_FILE }}')) > scripts/env/.env
          [System.Text.Encoding]::UTF8.GetString([Convert]::FromBase64String('${{ secrets.DEV_ENV_FILE }}')) > scripts/env/.env.dev
        # mkdir -p scripts
        # mkdir -p scripts/env
        # echo -n  | base64 -d > 
        # echo -n  | base64 -d > 
      - name: Setup Flutter SDK
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ vars.FLUTTER_VERSION }}
          channel: ${{ vars.FLUTTER_CHANNEL }}
          cache: true
      
      # テスト実行
      - run: flutter pub get
      - run: flutter pub run build_runner build --delete-conflicting-outputs
      - run: flutter test