# ワークフローの表示名
name: Flutter Analyze

# ワークフローの起動条件を定義する
on:
  # プルリクエストが作成 or 更新された時
  pull_request:
    types:
      - opened
      - synchronize

  # main ブランチに push された時
  push:
    branches:
      - main

# 複数のジョブを定義する
# 各ジョブはそれぞれまったく別々の環境で実行される
jobs:
  flutter_analyze:
    # ジョブの表示名
    name: Analyze

    # 一時的な無効化
    # if: ${{ false }}

    # ジョブを実行するOS
    runs-on: ubuntu-latest

    # タイムアウト時間（分）
    timeout-minutes: 15

    # ジョブの手順
    steps:
      # チェックアウト
      - name: Checkout
        uses: actions/checkout@v3

      # 設定ファイルの配置
      - name: Create dart-define
        run: |
          mkdir -p apps/app/dart_defines
          echo -n ${{ secrets.DART_DEFINE_JSON }} | base64 -d > apps/app/dart_defines/prod.json

      - name: Create Firebase Conf
        run: |
          echo -n ${{ secrets.FIREBASE_OPTIONS }} | base64 -d > apps/app/lib/firebase_options.dart
          echo -n ${{ secrets.FIREBASE_OPTIONS_DEV }} | base64 -d > apps/app/lib/firebase_options_dev.dart
          mkdir -p apps/app/android/app/src/prod/
          echo -n ${{ secrets.GOOGLE_SERVICES_JSON }} | base64 -d > apps/app/android/app/src/prod/google-services.json
          mkdir -p apps/app/ios/prod/
          echo -n ${{ secrets.GOOGLE_INFO_PLIST }} | base64 -d > apps/app/ios/prod/GoogleService-Info.plist

      - name: Create env
        run: |
          mkdir -p apps/app/scripts
          mkdir -p apps/app/scripts/env
          echo -n ${{ secrets.ENV_FILE }} | base64 -d > apps/app/scripts/env/.env
          echo -n ${{ secrets.DEV_ENV_FILE }} | base64 -d > apps/app/scripts/env/.env.dev

      # セットアップ
      # - name: Setup Config Files
      #   uses: ./.github/actions/setup-config-files
      - name: Setup Application Runtime
        uses: ./.github/actions/setup-application-runtime

      # 静的解析を実行
      - run: melos bs
      - run: melos run regenerate_code
      - run: flutter analyze
